<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LB"
        xmlns:Repositoty="clr-namespace:LB.Repositoty" xmlns:TodoEntities="clr-namespace:TodoEntities;assembly=TodoEntities" x:Class="LB.Main"
        mc:Ignorable="d"
        Title="Main" Height="800" Width="600" Loaded="Window_Loaded">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20,20,5,5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5,5,20,20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="50,50,50,50" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="719*"/>
            <RowDefinition Height="65*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="76*"/>
            <ColumnDefinition Width="250*"/>
            <ColumnDefinition Width="300*"/>
            <ColumnDefinition Width="30*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="55*"/>
                <RowDefinition Height="12*"/>
                <RowDefinition Height="40*"/>
                <RowDefinition Height="31*"/>
                <RowDefinition Height="39*"/>
                <RowDefinition Height="536*"/>
                <RowDefinition Height="71*"/>
            </Grid.RowDefinitions>
            <Image Grid.Row="0" Source="/Resorses/5217769998146199571.png" />
            <Label x:Name="UserBox"  Grid.Row="1" HorizontalAlignment="Center"  Margin="0,12,0,0" Grid.RowSpan="2" Width="69" ></Label>
            <Button HorizontalAlignment="Center" Background="White"  VerticalAlignment="Bottom" Grid.Row="3" Content="Задачи" RenderTransformOrigin="0.524,-0.346" Height="26" Width="50" BorderThickness="0,0,0,0" Margin="0,0,0,2" Click="Button_Click_4"/>
            <Button Background="White" HorizontalAlignment="Center"  Grid.Row="4" Content="История" Width="56" Margin="0,6,0,0" BorderThickness="0,0,0,0" Click="Button_Click_3" >
            </Button>
            <Button Style="{DynamicResource ButtonStyle3}"  Foreground="White" Content="+" FontSize="30"  Grid.Row="6" Background="#FFC37979" Margin="0,5,0,0" Height="66" VerticalAlignment="Top" Click="Button_Click_2"/>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="1" >
            <Grid.RowDefinitions>
                <RowDefinition Height="75*"/>
                <RowDefinition Height="30*"/>
                <RowDefinition Height="646*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="1">
                <ListBox x:Name="Category_List"  ItemsSource="{Binding UniqueCategoriesList}" BorderThickness="0,0,0,0" Loaded="Category_List_Loaded"  ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Hidden" Grid.Row="1" SelectionChanged="Category_List_SelectionChanged_1">
                    <!--<ListBox.ItemTemplate>
                        <DataTemplate>
                            <Label Content="{Binding UniqueCategoriesList}" FontSize="8" Foreground="#FF1A68E5" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>-->                
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
            </Grid>
            <Grid Grid.Row="2">

                <ListBox x:Name="Task_List" SelectionChanged="Task_List_SelectionChanged" BorderThickness="0,0,0,0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="5" Orientation="Horizontal" >
                                <RadioButton Margin="5" IsChecked="{Binding IsCompleted}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF1A68E5" />
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="16" Text="{Binding Name}"  />
                                    <TextBlock Grid.Row="1" FontSize="12" Text="{Binding Date}"/>
                                </Grid>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsCompleted}" Value="true">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            
            
            <Grid Grid.Row="2">
                <ListBox x:Name="Taske_List" SelectionChanged="Taske_List_SelectionChanged"  BorderThickness="0,0,0,0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="5" Orientation="Horizontal" >
                                <CheckBox Margin="5" IsChecked="{Binding IsCompleted}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF1A68E5" />
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" FontSize="16" TextDecorations="Strikethrough" Foreground="Gray" Text="{Binding Name}"  />
                                    <TextBlock Grid.Row="1" FontSize="12" TextDecorations="Strikethrough" Foreground="Gray" Text="{Binding Date}"/>
                                </Grid>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsCompleted}" Value="false">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </Grid>
        <Border Grid.Column="2" BorderThickness="1,1,1,1" BorderBrush="{Binding Task_List_SelectionChanged}" />
        <Grid Grid.Column="2" >
            <Grid.RowDefinitions>
                <RowDefinition Height="76*"/>
                <RowDefinition Height="643*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="1" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="561*"/>
                    <RowDefinition Height="150*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50*"/>
                        <RowDefinition Height="50*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Button Style="{DynamicResource ButtonStyle1}" Content="Готово" x:Name="Buttone_Gotovo"  Margin="30,15,30,10" Background="#FFC37979" Click="Button_Click"/>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Button Style="{DynamicResource ButtonStyle2}" x:Name="Buttone_Delete"  Content="Удалить" Margin="30,15,30,10" Background="#FFC37979" Click="Button_Click_1"/>
                    </Grid>
                </Grid>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="47*"/>
                        <RowDefinition Height="47*"/>
                        <RowDefinition Height="47*"/>
                        <RowDefinition Height="47*"/>
                        <RowDefinition Height="460*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Label x:Name="TaskName"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
                    </Grid>
                    <Grid Grid.Row="1">
                        <TextBlock x:Name="TaskDate"  VerticalAlignment="Bottom"/>
                    </Grid>
                    <Grid Grid.Row="2">
                        <TextBlock x:Name="TaskDateTime"  VerticalAlignment="Bottom"/>
                    </Grid>
                    <Grid Grid.Row="4">
                        <TextBlock x:Name="TaskDescriotion"  />
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
